{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "environmentPrefix": {
      "type": "string",
      "defaultValue": "demo",
      "metadata": {
        "description": "Environment identifier prefix for resources"
      }
    },
    "addressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Address prefix for the Virtual Network"
      }
    },
	"logsStorageAccounts": {
       "type": "String",
	   "defaultValue": "waflogstore",
	   "metadata": {
	     "description": "Storage account for storing WAF logs"
	   }
    },
    "settingName": {
      "type": "string",
	  "defaultValue": "checkwaflogs",
      "metadata": {
        "description": "Name of the setting. Name for the diagnostic setting resource. Eg. 'archiveToStorage' or 'forSecurityTeam'."
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/28",
      "metadata": {
        "description": "Subnet prefix"
      }
    },
    "applicationGatewaySize": {
      "type": "string",
      "allowedValues": [
        "WAF_Medium",
        "WAF_Large"
      ],
      "defaultValue": "WAF_Medium",
      "metadata": {
        "description": "application gateway size"
      }
    },
    "capacity": {
      "type": "int",
      "allowedValues": [
        1,
        2,
        3,
        4,
        5
      ],
      "defaultValue": 1,
      "metadata": {
        "description": "Number of instances"
      }
    },
    "backendIpAddress1": {
      "type": "string",
      "defaultValue": "glisiteapp.azurewebsites.net",
      "metadata": {
        "description": "IP Address for Backend Server 1"
      }
    },
    "wafEnabled": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "WAF Enabled"
      }
    },
    "wafMode": {
      "type": "string",
      "allowedValues": [
        "Detection",
        "Prevention"
      ],
      "defaultValue": "Prevention",
      "metadata": {
        "description": "WAF Mode"
      }
    },
    "wafRuleSetType": {
      "type": "string",
      "allowedValues": [
        "OWASP"
      ],
      "defaultValue": "OWASP",
      "metadata": {
        "description": "WAF Rule Set Type"
      }
    },
    "wafRuleSetVersion": {
      "type": "string",
      "allowedValues": [
        "2.2.9",
        "3.0"
      ],
      "defaultValue": "3.0",
      "metadata": {
        "description": "WAF Rule Set Version"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "applicationGatewayName": "[concat(parameters('environmentPrefix'),'applicationGateway1')]",
    "publicIPAddressName": "[concat(parameters('environmentPrefix'),'publicIp1')]",
    "virtualNetworkName": "[concat(parameters('environmentPrefix'),'virtualNetwork1')]",
    "subnetName": "[concat(parameters('environmentPrefix'),'appGatewaySubnet')]",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', variables('virtualNetworkName'), variables('subnetName'))]",
    "publicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
    "applicationGatewayID": "[resourceId('Microsoft.Network/applicationGateways', variables('applicationGatewayName'))]",
	"waflogstorage": "[toLower(concat(parameters('environmentPrefix'),parameters('logsStorageAccounts')))]"
  },
  "resources": [
    {
      "apiVersion": "2017-03-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "apiVersion": "2017-03-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetPrefix')]"
            }
          }
        ]
      }
    },
	{
        "apiVersion": "2017-10-01",
        "location": "[parameters('location')]",
        "type": "Microsoft.Storage/storageAccounts",
		"name": "[variables('waflogstorage')]",
        "sku": {
            "name": "Standard_LRS",
            "tier": "Standard"
        },
        "kind": "Storage",
        
        "tags": {},
        "scale": null,
        "properties": {
            "networkAcls": {
                "bypass": "AzureServices",
                "virtualNetworkRules": [],
                "ipRules": [],
                "defaultAction": "Allow"
            },
            "supportsHttpsTrafficOnly": false,
            "encryption": {
                "services": {
                    "file": {
                        "enabled": true
                    },
                    "blob": {
                        "enabled": true
                    }
                },
                "keySource": "Microsoft.Storage"
            }
        },
        "dependsOn": []
    },
    {
      "apiVersion": "2018-02-01",
      "name": "[variables('applicationGatewayName')]",
      "type": "Microsoft.Network/applicationGateways",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[variables('virtualNetworkName')]",
        "[variables('publicIPAddressName')]"
      ],
      
      "properties": {
        "sku": {
          "name": "[parameters('applicationGatewaySize')]",
          "tier": "WAF",
          "capacity": "[parameters('capacity')]"
        },
        "gatewayIPConfigurations": [
          {
            "name": "[concat(parameters('environmentPrefix'),'appGatewayIpConfig')]",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "[concat(parameters('environmentPrefix'),'appGatewayFrontendIP')]",
            "properties": {
              "PublicIPAddress": {
                "id": "[variables('publicIPRef')]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "[concat(parameters('environmentPrefix'),'appGatewayFrontendPort')]",
            "properties": {
              "Port": 80
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[concat(parameters('environmentPrefix'),'appGatewayBackendPool')]",
            "properties": {
              "BackendAddresses": [
                {
                  "Fqdn": "[parameters('backendIpAddress1')]"
                }
              ]
            }
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "[concat(parameters('environmentPrefix'),'appGatewayBackendHttpSettings')]",
            "properties": {
              "Port": 80,
              "Protocol": "Http",
			  "HostName": "[parameters('backendIpAddress1')]",
              "CookieBasedAffinity": "Disabled",
              "probe": {
                "id": "[concat(variables('applicationGatewayID'),'/probes/httpcheck')]"
              }
            }
          }
        ],
        "httpListeners": [
          {
            "name": "[concat(parameters('environmentPrefix'),'appGatewayHttpListener')]",
            "properties": {
              "FrontendIPConfiguration": {
                "Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/',parameters('environmentPrefix'),'appGatewayFrontendIP')]"
              },
              "FrontendPort": {
                "Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/',parameters('environmentPrefix'),'appGatewayFrontendPort')]"
              },
              "Protocol": "Http",
              "SslCertificate": null
            }
          }
        ],
        "probes": [
          {
            "name": "httpcheck",
            "properties": {
              "provisioningState": "Succeeded",
              "protocol": "Http",
              "host": "",
              "path": "/",
              "interval": 30,
              "timeout": 30,
              "unhealthyThreshold": 0,
			  
              "pickHostNameFromBackendHttpSettings": true,
              "minServers": 0,
              "match": {
                  "body": "",
                  "statusCodes": [
                      "200-399"
                  ]
              }
            }
          }
        ],
        "requestRoutingRules": [
          {
            "Name": "[concat(parameters('environmentPrefix'),'-rule')]",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[concat(variables('applicationGatewayID'), '/httpListeners/',parameters('environmentPrefix'),'appGatewayHttpListener')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/',parameters('environmentPrefix'),'appGatewayBackendPool')]"
              },
              "backendHttpSettings": {
                "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/',parameters('environmentPrefix'),'appGatewayBackendHttpSettings')]"
              }
            }
          }
        ],
        "webApplicationFirewallConfiguration": {
          "enabled": "[parameters('wafEnabled')]",
          "firewallMode": "[parameters('wafMode')]",
          "ruleSetType": "[parameters('wafRuleSetType')]",
          "ruleSetVersion": "[parameters('wafRuleSetVersion')]",
          "disabledRuleGroups": []
        },
		"enableHttp2": true
      },
	  "resources": [
	    {
          "type": "providers/diagnosticSettings",
          "name": "[concat('Microsoft.Insights/',parameters('settingName'))]",
          "apiVersion": "2017-05-01-preview",
	      "location": "[parameters('location')]",
	      "dependsOn": [ 
		    "[variables('applicationGatewayName')]" 
		  ],
          "properties": {
            "name": "[parameters('settingName')]",
            "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('waflogstorage'))]",
            "logs": [
              {
                "category": "ApplicationGatewayAccessLog",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              },
              {
                "category": "ApplicationGatewayFirewallLog",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              }
            ]
          }
        }
	  ]
	}
  ]
}
